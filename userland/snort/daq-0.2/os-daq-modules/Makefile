# Makefile.in generated by automake 1.10.2 from Makefile.am.
# os-daq-modules/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/daq
pkglibdir = $(libdir)/daq
pkgincludedir = $(includedir)/daq
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
am__append_1 = daq_afpacket.la
am__append_2 = daq_afpacket.c
am__append_3 = -DBUILD_AFPACKET_MODULE
am__append_4 = $(top_srcdir)/sfbpf/libsfbpf.la
am__append_5 = -lsfbpf
am__append_6 = daq_pcap.la
am__append_7 = daq_pcap.c
am__append_8 = -DBUILD_PCAP_MODULE
am__append_9 = -lpcap
am__append_10 = -lpcap
am__append_11 = daq_pfring.la
am__append_12 = daq_pfring.c
am__append_13 = -DBUILD_PFRING_MODULE
am__append_14 = -lpfring
am__append_15 = -lpfring
am__append_16 = daq_dump.la
am__append_17 = daq_dump.c
am__append_18 = -DBUILD_DUMP_MODULE
am__append_19 = -lpcap
am__append_20 = -lpcap
am__append_21 = daq_ipfw.la
am__append_22 = daq_ipfw.c
am__append_23 = -DBUILD_IPFW_MODULE
am__append_24 = -lsfbpf
#am__append_25 = daq_ipq.la
#am__append_26 = daq_ipq.c
#am__append_27 = -DBUILD_IPQ_MODULE
#am__append_28 = -lipq -ldnet -lsfbpf
#am__append_29 = daq_nfq.la
#am__append_30 = daq_nfq.c
#am__append_31 = -DBUILD_NFQ_MODULE
#am__append_32 = -lnfnetlink -lnetfilter_queue -ldnet -lsfbpf
subdir = os-daq-modules
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)" \
	"$(DESTDIR)$(bindir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
pkglibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(pkglib_LTLIBRARIES)
daq_afpacket_la_DEPENDENCIES =  \
	$(top_srcdir)/sfbpf/libsfbpf.la
am__daq_afpacket_la_SOURCES_DIST = daq_afpacket.c
am_daq_afpacket_la_OBJECTS =  \
	daq_afpacket_la-daq_afpacket.lo
daq_afpacket_la_OBJECTS = $(am_daq_afpacket_la_OBJECTS)
daq_afpacket_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(daq_afpacket_la_CFLAGS) \
	$(CFLAGS) $(daq_afpacket_la_LDFLAGS) $(LDFLAGS) -o $@
am_daq_afpacket_la_rpath = -rpath \
	$(pkglibdir)
daq_dump_la_DEPENDENCIES =
am__daq_dump_la_SOURCES_DIST = daq_dump.c
am_daq_dump_la_OBJECTS =  \
	daq_dump_la-daq_dump.lo
daq_dump_la_OBJECTS = $(am_daq_dump_la_OBJECTS)
daq_dump_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(daq_dump_la_CFLAGS) \
	$(CFLAGS) $(daq_dump_la_LDFLAGS) $(LDFLAGS) -o $@
am_daq_dump_la_rpath = -rpath $(pkglibdir)
daq_ipfw_la_DEPENDENCIES =  \
	$(top_srcdir)/sfbpf/libsfbpf.la
am__daq_ipfw_la_SOURCES_DIST = daq_ipfw.c
am_daq_ipfw_la_OBJECTS =  \
	daq_ipfw_la-daq_ipfw.lo
daq_ipfw_la_OBJECTS = $(am_daq_ipfw_la_OBJECTS)
daq_ipfw_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(daq_ipfw_la_CFLAGS) \
	$(CFLAGS) $(daq_ipfw_la_LDFLAGS) $(LDFLAGS) -o $@
am_daq_ipfw_la_rpath = -rpath $(pkglibdir)
#daq_ipq_la_DEPENDENCIES =  \
#	$(top_srcdir)/sfbpf/libsfbpf.la
am__daq_ipq_la_SOURCES_DIST = daq_ipq.c
#am_daq_ipq_la_OBJECTS = daq_ipq_la-daq_ipq.lo
daq_ipq_la_OBJECTS = $(am_daq_ipq_la_OBJECTS)
daq_ipq_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(daq_ipq_la_CFLAGS) \
	$(CFLAGS) $(daq_ipq_la_LDFLAGS) $(LDFLAGS) -o $@
#am_daq_ipq_la_rpath = -rpath $(pkglibdir)
#daq_nfq_la_DEPENDENCIES =  \
#	$(top_srcdir)/sfbpf/libsfbpf.la
am__daq_nfq_la_SOURCES_DIST = daq_nfq.c
#am_daq_nfq_la_OBJECTS = daq_nfq_la-daq_nfq.lo
daq_nfq_la_OBJECTS = $(am_daq_nfq_la_OBJECTS)
daq_nfq_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(daq_nfq_la_CFLAGS) \
	$(CFLAGS) $(daq_nfq_la_LDFLAGS) $(LDFLAGS) -o $@
#am_daq_nfq_la_rpath = -rpath $(pkglibdir)
daq_pcap_la_DEPENDENCIES =
am__daq_pcap_la_SOURCES_DIST = daq_pcap.c
am_daq_pcap_la_OBJECTS =  \
	daq_pcap_la-daq_pcap.lo
daq_pcap_la_OBJECTS = $(am_daq_pcap_la_OBJECTS)
daq_pcap_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(daq_pcap_la_CFLAGS) \
	$(CFLAGS) $(daq_pcap_la_LDFLAGS) $(LDFLAGS) -o $@
am_daq_pcap_la_rpath = -rpath $(pkglibdir)
daq_pfring_la_DEPENDENCIES =
am__daq_pfring_la_SOURCES_DIST = daq_pfring.c
am_daq_pfring_la_OBJECTS =  \
	daq_pfring_la-daq_pfring.lo
daq_pfring_la_OBJECTS = $(am_daq_pfring_la_OBJECTS)
daq_pfring_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(daq_pfring_la_CFLAGS) \
	$(CFLAGS) $(daq_pfring_la_LDFLAGS) $(LDFLAGS) -o $@
am_daq_pfring_la_rpath = -rpath $(pkglibdir)
am__DEPENDENCIES_1 =
libdaq_static_modules_la_DEPENDENCIES = $(am__append_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__libdaq_static_modules_la_SOURCES_DIST = daq_static_modules.c \
	daq_static_modules.h daq_afpacket.c daq_pcap.c daq_pfring.c \
	daq_dump.c daq_ipfw.c daq_ipq.c daq_nfq.c
am__objects_1 = libdaq_static_modules_la-daq_afpacket.lo
am__objects_2 =  \
	libdaq_static_modules_la-daq_pcap.lo
am__objects_3 = libdaq_static_modules_la-daq_pfring.lo
am__objects_4 =  \
	libdaq_static_modules_la-daq_dump.lo
am__objects_5 =  \
	libdaq_static_modules_la-daq_ipfw.lo
#am__objects_6 =  \
#	libdaq_static_modules_la-daq_ipq.lo
#am__objects_7 =  \
#	libdaq_static_modules_la-daq_nfq.lo
am_libdaq_static_modules_la_OBJECTS =  \
	libdaq_static_modules_la-daq_static_modules.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7)
libdaq_static_modules_la_OBJECTS =  \
	$(am_libdaq_static_modules_la_OBJECTS)
libdaq_static_modules_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libdaq_static_modules_la_CFLAGS) $(CFLAGS) \
	$(libdaq_static_modules_la_LDFLAGS) $(LDFLAGS) -o $@
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(daq_afpacket_la_SOURCES) $(daq_dump_la_SOURCES) \
	$(daq_ipfw_la_SOURCES) $(daq_ipq_la_SOURCES) \
	$(daq_nfq_la_SOURCES) $(daq_pcap_la_SOURCES) \
	$(daq_pfring_la_SOURCES) $(libdaq_static_modules_la_SOURCES)
DIST_SOURCES = $(am__daq_afpacket_la_SOURCES_DIST) \
	$(am__daq_dump_la_SOURCES_DIST) \
	$(am__daq_ipfw_la_SOURCES_DIST) $(am__daq_ipq_la_SOURCES_DIST) \
	$(am__daq_nfq_la_SOURCES_DIST) $(am__daq_pcap_la_SOURCES_DIST) \
	$(am__daq_pfring_la_SOURCES_DIST) \
	$(am__libdaq_static_modules_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/deri/network/PF_RING/userland/snort/daq-0.2/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/deri/network/PF_RING/userland/snort/daq-0.2/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/deri/network/PF_RING/userland/snort/daq-0.2/missing --run autoconf
AUTOHEADER = ${SHELL} /home/deri/network/PF_RING/userland/snort/daq-0.2/missing --run autoheader
AUTOMAKE = ${SHELL} /home/deri/network/PF_RING/userland/snort/daq-0.2/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g  -fvisibility=hidden -Wall -Wwrite-strings -Wsign-compare -Wcast-align -Wextra -Wformat -Wformat-security -Wno-unused-parameter -fno-strict-aliasing -fdiagnostics-show-option -pedantic -std=c99 -D_GNU_SOURCE
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBDL = -ldl
LIBOBJS = 
LIBS = -lpcap 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/deri/network/PF_RING/userland/snort/daq-0.2/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = daq
PACKAGE_BUGREPORT = snort-team@sourcefire.com
PACKAGE_NAME = daq
PACKAGE_STRING = daq 0.2
PACKAGE_TARNAME = daq
PACKAGE_VERSION = 0.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.2
V_LEX = flex -Psfbpf_
V_YACC = bison -y -p sfbpf_
XCCFLAGS = 
abs_builddir = /home/deri/network/PF_RING/userland/snort/daq-0.2/os-daq-modules
abs_srcdir = /home/deri/network/PF_RING/userland/snort/daq-0.2/os-daq-modules
abs_top_builddir = /home/deri/network/PF_RING/userland/snort/daq-0.2
abs_top_srcdir = /home/deri/network/PF_RING/userland/snort/daq-0.2
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/deri/network/PF_RING/userland/snort/daq-0.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = foreign
ACLOCAL_AMFLAGS = -I m4
bin_SCRIPTS = daq-modules-config
pkglib_LTLIBRARIES = $(am__append_1) $(am__append_6) $(am__append_11) \
	$(am__append_16) $(am__append_21) $(am__append_25) \
	$(am__append_29)
STATIC_LIBS = $(am__append_5) $(am__append_10) $(am__append_15) \
	$(am__append_20) $(am__append_24) $(am__append_28) \
	$(am__append_32)
lib_LTLIBRARIES = libdaq_static_modules.la
libdaq_static_modules_la_SOURCES = daq_static_modules.c \
	daq_static_modules.h $(am__append_2) $(am__append_7) \
	$(am__append_12) $(am__append_17) $(am__append_22) \
	$(am__append_26) $(am__append_30)
libdaq_static_modules_la_CFLAGS = $(am__append_3) $(am__append_8) \
	$(am__append_13) $(am__append_18) $(am__append_23) \
	$(am__append_27) $(am__append_31)
libdaq_static_modules_la_LDFLAGS = -static -avoid-version
libdaq_static_modules_la_LIBADD = $(am__append_4) $(am__append_9) \
	$(am__append_14) $(am__append_19)
daq_afpacket_la_SOURCES = daq_afpacket.c
daq_afpacket_la_CFLAGS = -DBUILDING_SO
daq_afpacket_la_LDFLAGS = -module -export-dynamic -avoid-version -shared
daq_afpacket_la_LIBADD = $(top_srcdir)/sfbpf/libsfbpf.la
daq_pcap_la_SOURCES = daq_pcap.c
daq_pcap_la_CFLAGS = -DBUILDING_SO
daq_pcap_la_LDFLAGS = -module -export-dynamic -avoid-version -shared
daq_pcap_la_LIBADD = -lpcap
daq_pfring_la_SOURCES = daq_pfring.c
daq_pfring_la_CFLAGS = -DBUILDING_SO
daq_pfring_la_LDFLAGS = -module -export-dynamic -avoid-version -shared
daq_pfring_la_LIBADD = -lpfring
daq_dump_la_SOURCES = daq_dump.c
daq_dump_la_CFLAGS = -DBUILDING_SO
daq_dump_la_LDFLAGS = -module -export-dynamic -avoid-version -shared
daq_dump_la_LIBADD = -lpcap
daq_ipfw_la_SOURCES = daq_ipfw.c
daq_ipfw_la_CFLAGS = -DBUILDING_SO
daq_ipfw_la_LDFLAGS = -module -export-dynamic -avoid-version -shared
daq_ipfw_la_LIBADD = $(top_srcdir)/sfbpf/libsfbpf.la
#daq_ipq_la_SOURCES = daq_ipq.c
#daq_ipq_la_CFLAGS = -DBUILDING_SO
#daq_ipq_la_LDFLAGS = -module -export-dynamic -avoid-version -shared
#daq_ipq_la_LIBADD = -lipq -ldnet $(top_srcdir)/sfbpf/libsfbpf.la
#daq_nfq_la_SOURCES = daq_nfq.c
#daq_nfq_la_CFLAGS = -DBUILDING_SO
#daq_nfq_la_LDFLAGS = -module -export-dynamic -avoid-version -shared
#daq_nfq_la_LIBADD = -lnfnetlink -lnetfilter_queue -ldnet $(top_srcdir)/sfbpf/libsfbpf.la
INCLUDES = -I$(top_srcdir)/api -I$(top_srcdir)/sfbpf
CLEANFILES = daq-modules-config
EXTRA_DIST = daq-modules-config.in
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  os-daq-modules/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  os-daq-modules/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$p"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
daq_afpacket.la: $(daq_afpacket_la_OBJECTS) $(daq_afpacket_la_DEPENDENCIES) 
	$(daq_afpacket_la_LINK) $(am_daq_afpacket_la_rpath) $(daq_afpacket_la_OBJECTS) $(daq_afpacket_la_LIBADD) $(LIBS)
daq_dump.la: $(daq_dump_la_OBJECTS) $(daq_dump_la_DEPENDENCIES) 
	$(daq_dump_la_LINK) $(am_daq_dump_la_rpath) $(daq_dump_la_OBJECTS) $(daq_dump_la_LIBADD) $(LIBS)
daq_ipfw.la: $(daq_ipfw_la_OBJECTS) $(daq_ipfw_la_DEPENDENCIES) 
	$(daq_ipfw_la_LINK) $(am_daq_ipfw_la_rpath) $(daq_ipfw_la_OBJECTS) $(daq_ipfw_la_LIBADD) $(LIBS)
daq_ipq.la: $(daq_ipq_la_OBJECTS) $(daq_ipq_la_DEPENDENCIES) 
	$(daq_ipq_la_LINK) $(am_daq_ipq_la_rpath) $(daq_ipq_la_OBJECTS) $(daq_ipq_la_LIBADD) $(LIBS)
daq_nfq.la: $(daq_nfq_la_OBJECTS) $(daq_nfq_la_DEPENDENCIES) 
	$(daq_nfq_la_LINK) $(am_daq_nfq_la_rpath) $(daq_nfq_la_OBJECTS) $(daq_nfq_la_LIBADD) $(LIBS)
daq_pcap.la: $(daq_pcap_la_OBJECTS) $(daq_pcap_la_DEPENDENCIES) 
	$(daq_pcap_la_LINK) $(am_daq_pcap_la_rpath) $(daq_pcap_la_OBJECTS) $(daq_pcap_la_LIBADD) $(LIBS)
daq_pfring.la: $(daq_pfring_la_OBJECTS) $(daq_pfring_la_DEPENDENCIES) 
	$(daq_pfring_la_LINK) $(am_daq_pfring_la_rpath) $(daq_pfring_la_OBJECTS) $(daq_pfring_la_LIBADD) $(LIBS)
libdaq_static_modules.la: $(libdaq_static_modules_la_OBJECTS) $(libdaq_static_modules_la_DEPENDENCIES) 
	$(libdaq_static_modules_la_LINK) -rpath $(libdir) $(libdaq_static_modules_la_OBJECTS) $(libdaq_static_modules_la_LIBADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/daq_afpacket_la-daq_afpacket.Plo
include ./$(DEPDIR)/daq_dump_la-daq_dump.Plo
include ./$(DEPDIR)/daq_ipfw_la-daq_ipfw.Plo
include ./$(DEPDIR)/daq_ipq_la-daq_ipq.Plo
include ./$(DEPDIR)/daq_nfq_la-daq_nfq.Plo
include ./$(DEPDIR)/daq_pcap_la-daq_pcap.Plo
include ./$(DEPDIR)/daq_pfring_la-daq_pfring.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_afpacket.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_dump.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_ipfw.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_ipq.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_nfq.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_pcap.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_pfring.Plo
include ./$(DEPDIR)/libdaq_static_modules_la-daq_static_modules.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

daq_afpacket_la-daq_afpacket.lo: daq_afpacket.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_afpacket_la_CFLAGS) $(CFLAGS) -MT daq_afpacket_la-daq_afpacket.lo -MD -MP -MF $(DEPDIR)/daq_afpacket_la-daq_afpacket.Tpo -c -o daq_afpacket_la-daq_afpacket.lo `test -f 'daq_afpacket.c' || echo '$(srcdir)/'`daq_afpacket.c
	mv -f $(DEPDIR)/daq_afpacket_la-daq_afpacket.Tpo $(DEPDIR)/daq_afpacket_la-daq_afpacket.Plo
#	source='daq_afpacket.c' object='daq_afpacket_la-daq_afpacket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_afpacket_la_CFLAGS) $(CFLAGS) -c -o daq_afpacket_la-daq_afpacket.lo `test -f 'daq_afpacket.c' || echo '$(srcdir)/'`daq_afpacket.c

daq_dump_la-daq_dump.lo: daq_dump.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_dump_la_CFLAGS) $(CFLAGS) -MT daq_dump_la-daq_dump.lo -MD -MP -MF $(DEPDIR)/daq_dump_la-daq_dump.Tpo -c -o daq_dump_la-daq_dump.lo `test -f 'daq_dump.c' || echo '$(srcdir)/'`daq_dump.c
	mv -f $(DEPDIR)/daq_dump_la-daq_dump.Tpo $(DEPDIR)/daq_dump_la-daq_dump.Plo
#	source='daq_dump.c' object='daq_dump_la-daq_dump.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_dump_la_CFLAGS) $(CFLAGS) -c -o daq_dump_la-daq_dump.lo `test -f 'daq_dump.c' || echo '$(srcdir)/'`daq_dump.c

daq_ipfw_la-daq_ipfw.lo: daq_ipfw.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_ipfw_la_CFLAGS) $(CFLAGS) -MT daq_ipfw_la-daq_ipfw.lo -MD -MP -MF $(DEPDIR)/daq_ipfw_la-daq_ipfw.Tpo -c -o daq_ipfw_la-daq_ipfw.lo `test -f 'daq_ipfw.c' || echo '$(srcdir)/'`daq_ipfw.c
	mv -f $(DEPDIR)/daq_ipfw_la-daq_ipfw.Tpo $(DEPDIR)/daq_ipfw_la-daq_ipfw.Plo
#	source='daq_ipfw.c' object='daq_ipfw_la-daq_ipfw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_ipfw_la_CFLAGS) $(CFLAGS) -c -o daq_ipfw_la-daq_ipfw.lo `test -f 'daq_ipfw.c' || echo '$(srcdir)/'`daq_ipfw.c

daq_ipq_la-daq_ipq.lo: daq_ipq.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_ipq_la_CFLAGS) $(CFLAGS) -MT daq_ipq_la-daq_ipq.lo -MD -MP -MF $(DEPDIR)/daq_ipq_la-daq_ipq.Tpo -c -o daq_ipq_la-daq_ipq.lo `test -f 'daq_ipq.c' || echo '$(srcdir)/'`daq_ipq.c
	mv -f $(DEPDIR)/daq_ipq_la-daq_ipq.Tpo $(DEPDIR)/daq_ipq_la-daq_ipq.Plo
#	source='daq_ipq.c' object='daq_ipq_la-daq_ipq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_ipq_la_CFLAGS) $(CFLAGS) -c -o daq_ipq_la-daq_ipq.lo `test -f 'daq_ipq.c' || echo '$(srcdir)/'`daq_ipq.c

daq_nfq_la-daq_nfq.lo: daq_nfq.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_nfq_la_CFLAGS) $(CFLAGS) -MT daq_nfq_la-daq_nfq.lo -MD -MP -MF $(DEPDIR)/daq_nfq_la-daq_nfq.Tpo -c -o daq_nfq_la-daq_nfq.lo `test -f 'daq_nfq.c' || echo '$(srcdir)/'`daq_nfq.c
	mv -f $(DEPDIR)/daq_nfq_la-daq_nfq.Tpo $(DEPDIR)/daq_nfq_la-daq_nfq.Plo
#	source='daq_nfq.c' object='daq_nfq_la-daq_nfq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_nfq_la_CFLAGS) $(CFLAGS) -c -o daq_nfq_la-daq_nfq.lo `test -f 'daq_nfq.c' || echo '$(srcdir)/'`daq_nfq.c

daq_pcap_la-daq_pcap.lo: daq_pcap.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_pcap_la_CFLAGS) $(CFLAGS) -MT daq_pcap_la-daq_pcap.lo -MD -MP -MF $(DEPDIR)/daq_pcap_la-daq_pcap.Tpo -c -o daq_pcap_la-daq_pcap.lo `test -f 'daq_pcap.c' || echo '$(srcdir)/'`daq_pcap.c
	mv -f $(DEPDIR)/daq_pcap_la-daq_pcap.Tpo $(DEPDIR)/daq_pcap_la-daq_pcap.Plo
#	source='daq_pcap.c' object='daq_pcap_la-daq_pcap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_pcap_la_CFLAGS) $(CFLAGS) -c -o daq_pcap_la-daq_pcap.lo `test -f 'daq_pcap.c' || echo '$(srcdir)/'`daq_pcap.c

daq_pfring_la-daq_pfring.lo: daq_pfring.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_pfring_la_CFLAGS) $(CFLAGS) -MT daq_pfring_la-daq_pfring.lo -MD -MP -MF $(DEPDIR)/daq_pfring_la-daq_pfring.Tpo -c -o daq_pfring_la-daq_pfring.lo `test -f 'daq_pfring.c' || echo '$(srcdir)/'`daq_pfring.c
	mv -f $(DEPDIR)/daq_pfring_la-daq_pfring.Tpo $(DEPDIR)/daq_pfring_la-daq_pfring.Plo
#	source='daq_pfring.c' object='daq_pfring_la-daq_pfring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(daq_pfring_la_CFLAGS) $(CFLAGS) -c -o daq_pfring_la-daq_pfring.lo `test -f 'daq_pfring.c' || echo '$(srcdir)/'`daq_pfring.c

libdaq_static_modules_la-daq_static_modules.lo: daq_static_modules.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_static_modules.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_static_modules.Tpo -c -o libdaq_static_modules_la-daq_static_modules.lo `test -f 'daq_static_modules.c' || echo '$(srcdir)/'`daq_static_modules.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_static_modules.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_static_modules.Plo
#	source='daq_static_modules.c' object='libdaq_static_modules_la-daq_static_modules.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_static_modules.lo `test -f 'daq_static_modules.c' || echo '$(srcdir)/'`daq_static_modules.c

libdaq_static_modules_la-daq_afpacket.lo: daq_afpacket.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_afpacket.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_afpacket.Tpo -c -o libdaq_static_modules_la-daq_afpacket.lo `test -f 'daq_afpacket.c' || echo '$(srcdir)/'`daq_afpacket.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_afpacket.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_afpacket.Plo
#	source='daq_afpacket.c' object='libdaq_static_modules_la-daq_afpacket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_afpacket.lo `test -f 'daq_afpacket.c' || echo '$(srcdir)/'`daq_afpacket.c

libdaq_static_modules_la-daq_pcap.lo: daq_pcap.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_pcap.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_pcap.Tpo -c -o libdaq_static_modules_la-daq_pcap.lo `test -f 'daq_pcap.c' || echo '$(srcdir)/'`daq_pcap.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_pcap.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_pcap.Plo
#	source='daq_pcap.c' object='libdaq_static_modules_la-daq_pcap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_pcap.lo `test -f 'daq_pcap.c' || echo '$(srcdir)/'`daq_pcap.c

libdaq_static_modules_la-daq_pfring.lo: daq_pfring.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_pfring.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_pfring.Tpo -c -o libdaq_static_modules_la-daq_pfring.lo `test -f 'daq_pfring.c' || echo '$(srcdir)/'`daq_pfring.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_pfring.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_pfring.Plo
#	source='daq_pfring.c' object='libdaq_static_modules_la-daq_pfring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_pfring.lo `test -f 'daq_pfring.c' || echo '$(srcdir)/'`daq_pfring.c

libdaq_static_modules_la-daq_dump.lo: daq_dump.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_dump.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_dump.Tpo -c -o libdaq_static_modules_la-daq_dump.lo `test -f 'daq_dump.c' || echo '$(srcdir)/'`daq_dump.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_dump.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_dump.Plo
#	source='daq_dump.c' object='libdaq_static_modules_la-daq_dump.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_dump.lo `test -f 'daq_dump.c' || echo '$(srcdir)/'`daq_dump.c

libdaq_static_modules_la-daq_ipfw.lo: daq_ipfw.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_ipfw.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_ipfw.Tpo -c -o libdaq_static_modules_la-daq_ipfw.lo `test -f 'daq_ipfw.c' || echo '$(srcdir)/'`daq_ipfw.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_ipfw.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_ipfw.Plo
#	source='daq_ipfw.c' object='libdaq_static_modules_la-daq_ipfw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_ipfw.lo `test -f 'daq_ipfw.c' || echo '$(srcdir)/'`daq_ipfw.c

libdaq_static_modules_la-daq_ipq.lo: daq_ipq.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_ipq.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_ipq.Tpo -c -o libdaq_static_modules_la-daq_ipq.lo `test -f 'daq_ipq.c' || echo '$(srcdir)/'`daq_ipq.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_ipq.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_ipq.Plo
#	source='daq_ipq.c' object='libdaq_static_modules_la-daq_ipq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_ipq.lo `test -f 'daq_ipq.c' || echo '$(srcdir)/'`daq_ipq.c

libdaq_static_modules_la-daq_nfq.lo: daq_nfq.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -MT libdaq_static_modules_la-daq_nfq.lo -MD -MP -MF $(DEPDIR)/libdaq_static_modules_la-daq_nfq.Tpo -c -o libdaq_static_modules_la-daq_nfq.lo `test -f 'daq_nfq.c' || echo '$(srcdir)/'`daq_nfq.c
	mv -f $(DEPDIR)/libdaq_static_modules_la-daq_nfq.Tpo $(DEPDIR)/libdaq_static_modules_la-daq_nfq.Plo
#	source='daq_nfq.c' object='libdaq_static_modules_la-daq_nfq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdaq_static_modules_la_CFLAGS) $(CFLAGS) -c -o libdaq_static_modules_la-daq_nfq.lo `test -f 'daq_nfq.c' || echo '$(srcdir)/'`daq_nfq.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binSCRIPTS install-libLTLIBRARIES \
	install-pkglibLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binSCRIPTS uninstall-libLTLIBRARIES \
	uninstall-pkglibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-pkglibLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binSCRIPTS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am \
	install-pkglibLTLIBRARIES install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binSCRIPTS uninstall-libLTLIBRARIES \
	uninstall-pkglibLTLIBRARIES


daq-modules-config:
	sed -e 's|@LIBDIR@|${exec_prefix}/lib|g' -e 's|@STATIC_LIBS@|"$(sort $(STATIC_LIBS))"|g' daq-modules-config.in > daq-modules-config
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
