/**
 * NET-SNMP agent for Neterion Inc's X3100 Series 
 * 10Gbps network Adapters.
 * 
 * Copyright(c) 2002-2010 Exar Inc.
 *
 * This software may be used and distributed according to the terms of
 * the GNU General Public License (GPL), incorporated herein by reference.
 * Software based on or derived from this code fall under the GPL and must
 * retain the authorship, copyright and license notice.  This file is not
 * a complete program and may only be used when the entire operating
 * system is licensed under the GPL.
 * See the file COPYING in this distribution for more information.
 *
 * vxge-agent.h : definitions and prototypes for vxge-agent.c
 */ 
/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.old-api.conf 14476 2006-04-18 17:36:51Z hardaker $
 */
#ifndef VXGE_H
#define VXGE_H

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>

/* header_generic and simple_header_generic */
config_require(util_funcs)

/* vxge net-snmp agent version 
 * Note: These fields will be filled by source packaging scripts
 */
#define VXGE_AGENT_MAJOR	"2"
#define VXGE_AGENT_MINOR	"5"
#define VXGE_AGENT_FIX	"1"
#define VXGE_AGENT_VERSION	VXGE_AGENT_MAJOR "."\
				VXGE_AGENT_MINOR "."\
				VXGE_AGENT_FIX

/* vxge mib object majic indices */
#define VXGEGENVENDORNAME       1    /* Generic */
#define VXGEGENPRODUCTDESC      2
#define VXGEGENHOSTNAME         3
#define VXGEGENHOSTOS           4
#define VXGEGENMIBVERSION       5
#define VXGEGENVERSION          6
#define VXGEGENDRIVERSTATUS     7
#define VXGEBDNAME              8    /* Base */ 
#define VXGEBDVERSION           9
#define VXGEBDDATE              10
#define VXGEBDSPEED             11
#define VXGEBDINTRTYPE          12
#define VXGEBDDOORBELL          13
#define VXGEBDLRO               14
#define VXGEBDLROMAXPKT         15
#define VXGEBDNAPI              16
#define VXGEBDVLANTAGSTRIP      17
#define VXGEBDRXSTEERING        18
#define VXGEBDTXSTEERING        19
#define VXGEDEVICEIFACECOUNT    20
#define VXGEDTENABLE            21
#define VXGEDEINDEX             22   /* Device table */
#define VXGEDEDESC              23
#define VXGEDEPCIBDF            24
#define VXGEDEVENDORID          25
#define VXGEDEDEVICEID          26
#define VXGEDEIRQ               27
#define VXGEDEFUNCMODE          28
#define VXGEDEACCESSRIGHT       29
#define VXGEDEBANDWIDTH         30
#define VXGEDEVPATHCOUNT        31
#define VXGEDELINKMODE          32
#define VXGEDEACTIVELINK        33
#define VXGEDEPERMMAC           34
#define VXGEDECURRENTMAC        35
#define VXGEDEACTIVELINKSTATE   36
#define VXGEDEMTU               37
#define VXGEDERXCSUM            38
#define VXGEDETXCSUM            39
#define VXGEDETSO               40
#define VXGEDEUFO               41
#define VXGEDESG                42
#define VXGEDETXINTRCOUNT       43
#define VXGEDERXINTRCOUNT       44
#define VXGEDECOLLISION         45
#define VXGEDERXMULTICAST       46
#define VXGEDERXBYTES           47
#define VXGEDERXPACKETS         48
#define VXGEDERXDROPPED         49
#define VXGEDERXERRORS          50
#define VXGEDETXBYTES           51
#define VXGEDETXPACKETS         52
#define VXGEDETXDROPPED         53
#define VXGEDETXERRORS          54

/*
 * function declarations 
 */
void            init_vxge(void);
FindVarMethod   var_vxge;
FindVarMethod   var_vxgeDeviceTable;
WriteMethod     write_vxgeDTEnable;

void vxgeagent_trap_send(oid trap_id);

extern int header_simple_table(struct variable *, oid *, size_t *,
                                    int, size_t *,
                                    WriteMethod ** write_method, int);
extern int header_generic(struct variable *, oid *, size_t *, int,
                               size_t *, WriteMethod **);

#endif                          /* VXGE_H */
